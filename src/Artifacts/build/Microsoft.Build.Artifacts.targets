<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (c) Microsoft Corporation. All rights reserved.
  
  Licensed under the MIT license.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(CustomBeforeArtifactsTargets)"
          Condition=" '$(EnableArtifacts)' != 'false' And '$(CustomBeforeArtifactsTargets)' != '' And Exists('$(CustomBeforeArtifactsTargets)') " />

  <PropertyGroup>
    <MSBuildAllProjects Condition="'$(MSBuildToolsVersion)' != 'Current'">$(MSBuildAllProjects);$(MsBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <UsingTask TaskName="Robocopy"
             AssemblyFile="$([MSBuild]::ValueOrDefault('$(ArtifactsTaskAssembly)', '$(MSBuildThisFileDirectory)net46\Microsoft.Build.Artifacts.dll'))"
             Condition="'$(MSBuildRuntimeType)' != 'Core'" />
  <UsingTask TaskName="Robocopy"
             AssemblyFile="$([MSBuild]::ValueOrDefault('$(ArtifactsTaskAssembly)', '$(MSBuildThisFileDirectory)netcoreapp2.1\Microsoft.Build.Artifacts.dll'))"
             Condition="'$(MSBuildRuntimeType)' == 'Core'" />

  <ItemDefinitionGroup>
    <Robocopy>
      <Visible>false</Visible>
      <VerifyExists>true</VerifyExists>
    </Robocopy>
    <Artifacts>
      <Visible>false</Visible>
      <VerifyExists>true</VerifyExists>
    </Artifacts>
  </ItemDefinitionGroup>

  <ItemGroup Condition="'$(EnableDefaultArtifacts)' != 'false' And '$(ArtifactsPath)' != '' And '$([MSBuild]::ValueOrDefault($(DefaultArtifactsSource), $(OutputPath)))' != ''">
    <!--
      By default copy the contents of $(DefaultArtifactsSource) (default is $(OutputPath)) to $(ArtifactsPath) unless:
       * EnableDefaultArtifacts is 'false'
       * $(ArtifactsPath) is not specified
    -->
    <Artifacts Include="$([MSBuild]::ValueOrDefault($(DefaultArtifactsSource), $(OutputPath)))"
               DestinationFolder="$(ArtifactsPath)"
               FileMatch="$([MSBuild]::ValueOrDefault($(DefaultArtifactsFileMatch), '*exe *dll *exe.config'))" />
  </ItemGroup>

  <Target Name="CopyArtifacts"
          AfterTargets="$([MSBuild]::ValueOrDefault($(CopyArtifactsAfterTargets), 'AfterBuild'))"
          DependsOnTargets="$(CopyArtifactsDependsOn)">

    <Robocopy
      RetryCount="$([MSBuild]::ValueOrDefault($(ArtifactsCopyRetryCount), $(CopyRetryCount)))"
      RetryWait="$([MSBuild]::ValueOrDefault($(ArtifactsCopyRetryDelayMilliseconds), $(CopyRetryDelayMilliseconds)))"
      ShowDiagnosticTrace="$(ArtifactsShowDiagnostics)"
      ShowErrorOnRetry="$([MSBuild]::ValueOrDefault($(ArtifactsShowErrorOnRetry), 'true'))"
      Sources="@(Artifacts)"
      Condition="@(Artifacts->Count()) > 0" />

  </Target>

  <Target Name="RobocopyFiles"
          AfterTargets="$([MSBuild]::ValueOrDefault($(RobocopyFilesAfterTargets), 'AfterBuild'))"
          DependsOnTargets="$(RobocopyFilesDependsOn)">

    <Robocopy
      RetryCount="$([MSBuild]::ValueOrDefault($(RobocopyRetryCount), $(CopyRetryCount)))"
      RetryWait="$([MSBuild]::ValueOrDefault($(RobocopyRetryWait), $(CopyRetryDelayMilliseconds)))"
      ShowDiagnosticTrace="$(RobocopyShowDiagnosticTrace)"
      ShowErrorOnRetry="$([MSBuild]::ValueOrDefault($(RobocopyShowErrorOnRetry), 'true'))"
      Sources="@(Robocopy)"
      Condition="@(Robocopy->Count()) > 0"/>

  </Target>
  
  <Import Project="$(CustomAfterArtifactsTargets)"
          Condition=" '$(EnableArtifacts)' != 'false' And '$(CustomAfterArtifactsTargets)' != '' And Exists('$(CustomAfterArtifactsTargets)') " />
</Project>